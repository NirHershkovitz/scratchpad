group = "niro"
version = "1"

buildscript {
    ext {
        junitJupiterVersion = '5.1.0'
        junitPlatformVersion = '1.1.0'
        springBootVersion = '2.0.0.RELEASE'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
    compile group: 'org.asynchttpclient', name: 'async-http-client', version: '2.4.9'

    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"

    compile 'com.google.guava:guava:24.1-jre'
    compile group: 'net.sourceforge.tess4j', name: 'tess4j', version: '4.0.2'

    testCompile 'io.rest-assured:rest-assured:3.0.7' //Place before JUnit
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"

    //Needed for running tests in an (IntelliJ) IDE(A) that bundles an older Junit 5 version
    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testRuntime("org.junit.vintage:junit-vintage-engine:${junitJupiterVersion}")
}
